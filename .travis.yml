sudo: false

language: node_js
node_js:
    - "6"

os:
    - linux

compiler:
    - clang

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
        packages:
            - clang-3.8
            - autopoint
            - python-lxml
            - libgl1-mesa-dev
            - binutils-gold
            - ninja-build

cache:
    directories:
        - cmake-3.7.2
        - llvm-fastcomp
        - protobuf

env:
    global:
        # GH_TOKEN scope=public_repo, for pushing to gh-pages demo site,
        # limited to builds of the rib/gputop repo
        - secure: "CXTLgHD8PYC3OQO88QHFaCu6tfF4Pp/fHvn9cguOptBUrkOad5IKq43r4wNv+VFKl9f99K4tvBThHOLAryi+2OFDwkKIiIHfhyaEewLQKFOxGlXLQf6JlKslzVU8/r5BeKt1KH1fuNmaqGqyv39snVmBE0HGmHntpY8U0CtISwL8riS8fQWT/Ae3vUVDnkCaHen6QfCvOQtwZey7GwFp2+Dn7lVC4xviOTR2zEydMzRnvhzwO4NkeCtigqgY5jEW6Irmk72Ng/27UTYY/ps+/dvtLeL2xGWziPRWf92z6qMGJAuX6CfAkwPHF4G/MNnOSQ2R3YZPDPzSLitpz/ThXnpfUlJMpa7fV/RZMp9+WjbSvyfi4mUG+fyvWPS3oXkF05U5rmZn5LHrTvjFUXt7lj3n/Ugkk2+1dTFxwHE1HzV85C1kNgOIgwhJLvfddyhUncwBHKMUs6q5w9sha+5zMF0YTttG8EJFwHKqjCdwycJ5g1/i0mmj6qzTFosUmH0N+3bIPAO/ca6DjUXzoH1f0BeL22M3Uy3CEeWgfn7X87fRGK8pgHE6d3VYb6VdO8ys17Cz3SkRn4S71VwXqZg6nl462C/nUR23Rpi/ijYWhPYAqXVGPUsCOAzUl1PTBMDsHqWk2hUto2WEXCnVhpBoq5FkJ0RhV03tPyAZCtoCNcw="
    matrix:
        - CONFIG_OPTS="--enable-debug --enable-gl --disable-node-clients"
        - CONFIG_OPTS="--disable-debug --enable-gl --disable-node-clients"
        - CONFIG_OPTS="--enable-debug --disable-gl --disable-node-clients"
        - CONFIG_OPTS="--disable-debug --disable-gl --disable-node-clients"
        - CONFIG_OPTS="--enable-debug --disable-gl --enable-node-clients"
        - CONFIG_OPTS="--disable-debug --disable-gl --enable-node-clients"
        - CONFIG_OPTS="--disable-debug --disable-gl --enable-node-clients --enable-web-ui"

before_install:
    - node --version
    # Travis limits us to 50 minute builds, but unfortunately LLVM takes ages
    # and we sometimes have to limit the builds to doing one thing at a time to
    # repopulate the build caches
    - export CC=clang-3.8 CXX=clang++-3.8 LD=gold
    - $CC --version
    - (if test -f cmake-3.7.2/bin/cmake; then echo OK; else
           wget --no-check-certificate https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz &&
           tar -xvf cmake-3.7.2-Linux-x86_64.tar.gz > /dev/null &&
           mv cmake-3.7.2-Linux-x86_64/* $TRAVIS_BUILD_DIR/cmake-3.7.2;
       fi)
    # Building llvm-fastcomp manually helps us minimize the size of the directory we cache between builds...
    - (if test -d llvm-fastcomp/bin; then echo OK; else
           git clone --single-branch --branch master --depth 1 https://github.com/kripken/emscripten-fastcomp &&
           git clone --single-branch --branch master --depth 1 https://github.com/kripken/emscripten-fastcomp-clang emscripten-fastcomp/tools/clang &&
           mkdir emscripten-fastcomp/build &&
           cd emscripten-fastcomp/build &&
           PATH="$TRAVIS_BUILD_DIR/cmake-3.7.2/bin:$PATH" LDFLAGS="-s" CFLAGS="-Os" CXXFLAGS="-Os" cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/llvm-fastcomp -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD="X86;JSBackend" -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF -DCLANG_INCLUDE_TESTS=OFF -DLLVM_BUILD_DOCS=OFF &&
           ninja &&
           ninja install;
       fi)
    - export LLVM="$TRAVIS_BUILD_DIR/llvm-fastcomp/bin"
    - export PATH="$TRAVIS_BUILD_DIR/emscripten:$PATH"
    - git clone --single-branch --branch master --depth 1 https://github.com/kripken/emscripten
    - emcc -v
    - (if test -d protobuf/lib; then echo OK; else
            git clone --single-branch --branch master --depth 1 https://github.com/google/protobuf protobuf-src &&
            cd protobuf-src &&
            ./autogen.sh &&
            ./configure --prefix=$TRAVIS_BUILD_DIR/protobuf &&
            make &&
            make install;
       fi)
    - export PKG_CONFIG_PATH="$TRAVIS_BUILD_DIR/protobuf/lib/pkgconfig"
    # Fetch glext.h header including INTEL_performance_query enums
    - $(mkdir GL && cd GL && wget https://raw.githubusercontent.com/rib/mesa/wip/rib/oa-next/include/GL/glext.h)
    - "export DISPLAY=:99.0"
    - "sh -e /etc/init.d/xvfb start"
    - sleep 3

before_script:
    - npm install -g npm@latest
    - NOCONFIGURE=1 ./autogen.sh

script:
    - export GPUTOP_TRAVIS_MODE=1 
    - ./configure $CONFIG_OPTS --prefix=$TRAVIS_BUILD_DIR/install && make V=1 && make V=1 install
    - cd $TRAVIS_BUILD_DIR/install/bin
    - if [ "${CONFIG_OPTS/'enable-node-clients'}" != "$CONFIG_OPTS" ]; then ./gputop --fake 2> travis_log & sleep 3 && ./gputop-csv -m RenderBasic -c "Timestamp,GpuCoreClocks" & sleep 10 && kill $! && killall gputop-system && grep OpenQuery travis_log; cat travis_log; fi
    - if [ "${CONFIG_OPTS/'enable-web-ui'}" != "$CONFIG_OPTS" ]; then ./gputop --fake 2> travis_log & sleep 3 && firefox http://localhost:7890 & sleep 10 && killall firefox && killall gputop-system && grep OpenQuery travis_log; cat travis_log; fi

deploy:
    provider: script
    script: ./scripts/deploy-demo-site.sh
    skip_cleanup: true
    on:
        condition: $CONFIG_OPTS = "--disable-debug --disable-gl --enable-node-clients --enable-web-ui"
        condition: -z $RECACHE_STEPS
        branch: master
